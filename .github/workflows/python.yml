name: Python CI

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Install Docker and Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker.io
        sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version  # Verifica la instalación

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry install

    - name: Set environment variables
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: |
        echo "OPENAI_API_KEY=${OPENAI_API_KEY}" >> .env
        echo "MODEL=gpt-3.5-turbo" >> .env
        echo "MAX_TOKENS=2048" >> .env
        echo "TEMPERATURE=0.7" >> .env
        echo "NUMBER_OF_VECTORIAL_RESULTS=5" >> .env

    - name: Start Docker services
      run: docker-compose up -d

    - name: Wait for services to be ready
      run: |
        # Espera a que el servicio esté disponible
        until docker-compose exec -T <your_service_name> curl -f http://localhost:<port> >/dev/null 2>&1; do
          echo "Waiting for service..."
          sleep 5
        done

    - name: Run tests
      run: |
        poetry run pytest --cov=app --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
          flags: smart-tests
          verbose: true
      env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
